generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ユーザーテーブル
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transactions Transaction[]
  categories   Category[]
  sessions     Session[]

  @@map("users")
}

// 取引テーブル
model Transaction {
  id          String          @id @default(uuid())
  amount      Int
  type        TransactionType
  description String?
  date        DateTime
  userId      String
  categoryId  String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@index([userId])
  @@index([date])
  @@map("transactions")
}

// 取引種別のEnum
enum TransactionType {
  INCOME
  EXPENSE
}

// カテゴリテーブル
model Category {
  id        String          @id @default(uuid())
  name      String
  type      TransactionType
  userId    String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@unique([name, userId, type])
  @@index([userId])
  @@map("categories")
}

// セッション管理テーブル
model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  refreshToken String   @unique
  userId       String
  expiresAt    DateTime
  isActive     Boolean  @default(true)
  deviceInfo   String?
  ipAddress    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([expiresAt])
  @@index([sessionToken])
  @@index([refreshToken])
  @@map("sessions")
}
